{"version":3,"sources":["webpack:///scripts/chunk/Repair/ProjectInfo.js","webpack:///./~/hammerjs/hammer.js?b99a","webpack:///./src/scripts/components/Common/LoadMore.js?47d7**","webpack:///./src/scripts/components/Common/ProjectCard.js","webpack:///./src/scripts/components/Common/UserCardToProject.js","webpack:///./src/scripts/chunk/Repair/ProjectInfo.js","webpack:///./src/scripts/models/Repair/ProjectInfo.js"],"names":["webpackJsonp","1104","module","exports","__webpack_require__","__WEBPACK_AMD_DEFINE_RESULT__","window","document","exportName","undefined","setTimeoutContext","fn","timeout","context","setTimeout","bindFn","invokeArrayArg","arg","Array","isArray","each","obj","iterator","i","forEach","length","call","hasOwnProperty","deprecate","method","name","message","deprecationMessage","e","Error","stack","replace","log","console","warn","apply","this","arguments","inherit","child","base","properties","childP","baseP","prototype","Object","create","constructor","_super","assign","boolOrFn","val","args","TYPE_FUNCTION","ifUndefined","val1","val2","addEventListeners","target","types","handler","splitStr","type","addEventListener","removeEventListeners","removeEventListener","hasParent","node","parent","parentNode","inStr","str","find","indexOf","trim","split","inArray","src","findByKey","toArray","slice","uniqueArray","key","sort","results","values","push","a","b","prefixed","property","prefix","prop","camelProp","toUpperCase","VENDOR_PREFIXES","uniqueId","_uniqueId","getWindowForElement","element","doc","ownerDocument","defaultView","parentWindow","Input","manager","callback","self","options","inputTarget","domHandler","ev","enable","init","createInputInstance","inputClass","SUPPORT_POINTER_EVENTS","PointerEventInput","SUPPORT_ONLY_TOUCH","TouchInput","SUPPORT_TOUCH","TouchMouseInput","MouseInput","inputHandler","eventType","input","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","INPUT_START","isFinal","INPUT_END","INPUT_CANCEL","session","computeInputData","emit","recognize","prevInput","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","now","deltaTime","angle","getAngle","distance","getDistance","computeDeltaXY","offsetDirection","getDirection","deltaX","deltaY","overallVelocity","getVelocity","overallVelocityX","x","overallVelocityY","y","abs","scale","getScale","rotation","getRotation","maxPointers","computeIntervalInputData","srcEvent","offset","offsetDelta","prevDelta","velocity","velocityX","velocityY","direction","last","lastInterval","COMPUTE_INTERVAL","v","clientX","round","clientY","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","p1","p2","props","PROPS_XY","Math","sqrt","atan2","PI","start","end","PROPS_CLIENT_XY","evEl","MOUSE_ELEMENT_EVENTS","evWin","MOUSE_WINDOW_EVENTS","pressed","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","store","pointerEvents","SingleTouchInput","evTarget","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","started","normalizeSingleTouches","all","touches","changed","changedTouches","concat","TOUCH_TARGET_EVENTS","targetIds","getTouches","allTouches","INPUT_MOVE","identifier","targetTouches","changedTargetTouches","filter","touch","mouse","primaryTouch","lastTouches","recordTouches","eventData","setLastTouch","lastTouch","lts","removeLastTouch","splice","DEDUP_TIMEOUT","isSyntheticEvent","t","dx","dy","DEDUP_DISTANCE","TouchAction","value","set","cleanTouchActions","actions","TOUCH_ACTION_NONE","hasPanX","TOUCH_ACTION_PAN_X","hasPanY","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_AUTO","Recognizer","defaults","id","state","STATE_POSSIBLE","simultaneous","requireFail","stateStr","STATE_CANCELLED","STATE_ENDED","STATE_CHANGED","STATE_BEGAN","directionStr","getRecognizerByNameIfManager","otherRecognizer","recognizer","get","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","Hammer","recognizers","preset","Manager","handlers","oldCssProps","touchAction","toggleCssProps","item","add","recognizeWith","requireFailure","style","cssProps","triggerDomEvent","event","data","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","TEST_ELEMENT","createElement","Date","TypeError","output","index","source","nextKey","extend","dest","merge","keys","MOBILE_REGEX","test","navigator","userAgent","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","destroy","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","2","3","4","5","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","toLowerCase","isTouch","storeIndex","pointerId","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","TOUCH_INPUT_MAP","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","PREFIXED_TOUCH_ACTION","NATIVE_TOUCH_ACTION","TOUCH_ACTION_MAP","touchMap","cssSupports","CSS","supports","compute","update","getTouchAction","join","preventDefaults","prevented","preventDefault","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","STATE_RECOGNIZED","dropRecognizeWith","dropRequireFailure","hasRequireFailures","canRecognizeWith","additionalEvent","tryEmit","canEmit","inputDataClone","reset","process","attrTest","optionPointers","isRecognized","isValid","threshold","directionTest","hasMoved","inOut","time","validPointers","validMovement","validTime","clearTimeout","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","stop","force","stopped","curRecognizer","existing","remove","on","events","off","STATE_FAILED","Tap","Pan","Swipe","Pinch","Rotate","Press","1109","_interopRequireDefault","__esModule","default","_classCallCheck","instance","Constructor","_possibleConstructorReturn","ReferenceError","_typeof","_inherits","subClass","superClass","enumerable","writable","configurable","setPrototypeOf","__proto__","Symbol","defineProperty","_createClass","defineProperties","descriptor","protoProps","staticProps","_react","_react2","_reactDom","_dva","LoadMore","_Component","getPrototypeOf","className","$","evt","clientHeight","scrollTop","height","top","onEndReached","Component","propTypes","connect","1151","ProjectCardInfo","ProjectCardMore","ProjectCardListShow","ProjectCardSelect","_reactDom2","_hammerjs","_hammerjs2","_constants","_EpsModal","ProjectOperate","getDict","ProjectCardCommon","_this","itemdata","projectName","categoryCode","subCategoryCode","_Component2","_this2","selectHandler","bind","willbe","checked","onClick","_Component3","_this3","confirm","findDOMNode","refs","card","animate","left","removeItem","cardwrap","css","margin-top","deleteBtnShow","hammertime","delBtn","btnWidth","width","cardStartLeft","_this4","deleteBtn","ref","deleteItem","showCardIcon","_Component4","_this5","clickHandler","setState","_this6","showAllData","str_operate","getDictVal","animated","_init_name","faCategory","subCategory","openView","Number","formatMoney","_Component5","_this7","incidentalList","AlertInfoBase","text","label","parseInt","allMoney","allIndex","NameInfo","1781","UserCardToProject","url","EpsWebRoot","datas","upTabsData","jw","pushWebView","storeName","remark","repairType","orderid","location","href","fileUrl","isUnfinishedOrHistory","alt","initRepairType","moment","format","openWebView","openFileView","openScrapView","1847","mapStateToProps","_LoadMore","_LoadMore2","_UserCardToProject","_ProjectCard","ProjectInfo","Store","cache","view","_init_view","projectinfo","paddingBottom","_","map","findWhere","deviceNumber","container","dispatch","params","setHeight","payload","documentElement","body","header","1895","FirstFetch","parame","_EpsRequest2","JSON","stringify","param","eid","condition","orderNumber","pager","pageNum","pageSize","_extends","_EpsRequest","namespace","loading","fix","hide","reducers","changeData","action","effects","fetch","regeneratorRuntime","mark","_ref","_ref2","secondData","allData","put","select","wrap","_context","prev","next","sent","list","NProgress","done","subscriptions"],"mappings":"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","file":"scripts/chunk/Repair/ProjectInfo.js?v=3ae520bd","sourcesContent":["webpackJsonp([46],{\n\n/***/ 1104:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (true) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n        return Hammer;\n    }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n\n\n/***/ }),\n\n/***/ 1109:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () {\n\tfunction defineProperties(target, props) {\n\t\tfor (var i = 0; i < props.length; i++) {\n\t\t\tvar descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n\t\t}\n\t}return function (Constructor, protoProps, staticProps) {\n\t\tif (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n\t};\n}();\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = __webpack_require__(28);\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _dva = __webpack_require__(193);\n\nfunction _interopRequireDefault(obj) {\n\treturn obj && obj.__esModule ? obj : { default: obj };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n\tif (!(instance instanceof Constructor)) {\n\t\tthrow new TypeError(\"Cannot call a class as a function\");\n\t}\n}\n\nfunction _possibleConstructorReturn(self, call) {\n\tif (!self) {\n\t\tthrow new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n\t}return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n\tif (typeof superClass !== \"function\" && superClass !== null) {\n\t\tthrow new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n\t}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} /**\n   * 加载组件\n   *\n   * 功能说明: 列表下拉加载更多\n   * 使用说明：\n   * \t\t(1) demo案例\n   * \t\t\t\tlet bindtoref = this.refs.listwrap;\n   * \t\t\t\tlet onEndReached = (pageno)=>{\n   * \t\t\t\t\t// fetchdata by pageno\n   * \t\t\t\t\t// set loading = true\n   * \t\t\t\t\t// fetchdata end \n   * \t\t\t\t\t// set loading = false\n   * \t\t\t\t}\n   * \t\t\t\t<LoadMore pagesize=20 totalnum=200 pageno=0 loading={ false } bindtoref={ bindtoref } onEndReached={ ()=>{this.onEndReached(pageno)} }/>\n   * \t\t(2) 参数说明\n   * \t\t\tpagesize number  每页条数  可选\n   * \t\t\ttotalnum number  总条数   必填\n   * \t\t\tpageno  number  当前页数  必填\n   * \t\t\tloading  bool   加载状态  必填\n   * \t\t\tbindtoref react component's ref  监听滚动事件的宿主 可选  默认为body scroll\n   * \t\t\tonEndReached 回调函数  到达底部后回调事件，回调中可以根据pageno去加载下一页数据\n   *\n   */\n\nvar LoadMore = function (_Component) {\n\t_inherits(LoadMore, _Component);\n\n\tfunction LoadMore() {\n\t\t_classCallCheck(this, LoadMore);\n\n\t\treturn _possibleConstructorReturn(this, (LoadMore.__proto__ || Object.getPrototypeOf(LoadMore)).apply(this, arguments));\n\t}\n\n\t_createClass(LoadMore, [{\n\t\tkey: 'render',\n\t\tvalue: function render() {\n\t\t\tvar data = this.props.data;\n\t\t\treturn _react2.default.createElement('div', { className: \"loading-bounce-w \" + (data['hide'] ? 'hide' : '') + ' ' + (data['fix'] ? 'fix' : '') }, _react2.default.createElement('div', { className: 'loading-bounce-bg' }), _react2.default.createElement('div', { className: 'loading-gif' }, _react2.default.createElement('img', { src: 'images/loading.gif' })));\n\t\t}\n\t}, {\n\t\tkey: 'componentDidMount',\n\t\tvalue: function componentDidMount() {\n\t\t\tvar self = this;\n\t\t\tvar data = this.props.data;\n\t\t\tconsole.log('Marlin LoadMore end', data);\n\t\t\tif (this.props['container']) {\n\t\t\t\tconsole.log(\"container\", this.props['container']);\n\t\t\t\t$(\".\" + this.props['container']).on(\"scroll\", function (evt) {\n\n\t\t\t\t\tif (data['fix'] || data['loading']) return;\n\n\t\t\t\t\tconsole.log('Marlin fixed', data['fix'], data['loading']);\n\n\t\t\t\t\tvar scrollTop = $('.' + self.props['container']).scrollTop();\n\t\t\t\t\tvar clientHeight = $('.' + self.props['container']).height();\n\t\t\t\t\tvar target = $('.loading-bounce-w');\n\t\t\t\t\t// let target = $('.todos-list-loadmore');\n\t\t\t\t\tif (target.length == 0) return;\n\n\t\t\t\t\tif (clientHeight + 80 >= target.offset().top) {\n\t\t\t\t\t\tconsole.log('Marlin Top', clientHeight, target.offset().top);\n\t\t\t\t\t\tself.props.onEndReached(evt);\n\t\t\t\t\t\t// $(this).unbind('scroll');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {}\n\t\t}\n\t}]);\n\n\treturn LoadMore;\n}(_react.Component);\n\n;\n\nLoadMore.propTypes = {};\n\nexports.default = (0, _dva.connect)(function (state) {\n\treturn state;\n})(LoadMore);\n\n/***/ }),\n\n/***/ 1151:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.ProjectCardInfo = exports.ProjectCardMore = exports.ProjectCardListShow = exports.ProjectCardSelect = undefined;\n\nvar _createClass = function () {\n\tfunction defineProperties(target, props) {\n\t\tfor (var i = 0; i < props.length; i++) {\n\t\t\tvar descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n\t\t}\n\t}return function (Constructor, protoProps, staticProps) {\n\t\tif (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n\t};\n}();\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = __webpack_require__(28);\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _hammerjs = __webpack_require__(1104);\n\nvar _hammerjs2 = _interopRequireDefault(_hammerjs);\n\nvar _dva = __webpack_require__(193);\n\nvar _constants = __webpack_require__(194);\n\nvar _EpsModal = __webpack_require__(195);\n\nfunction _interopRequireDefault(obj) {\n\treturn obj && obj.__esModule ? obj : { default: obj };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n\tif (!(instance instanceof Constructor)) {\n\t\tthrow new TypeError(\"Cannot call a class as a function\");\n\t}\n}\n\nfunction _possibleConstructorReturn(self, call) {\n\tif (!self) {\n\t\tthrow new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n\t}return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n\tif (typeof superClass !== \"function\" && superClass !== null) {\n\t\tthrow new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n\t}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} /**\n   * 工程卡片\n   */\n\nvar ProjectOperate = (0, _constants.getDict)('equipmentOperation');\n/*\n * 工程卡片的公共展示部分\n */\n\nvar ProjectCardCommon = function (_Component) {\n\t_inherits(ProjectCardCommon, _Component);\n\n\tfunction ProjectCardCommon(props) {\n\t\t_classCallCheck(this, ProjectCardCommon);\n\n\t\tvar _this = _possibleConstructorReturn(this, (ProjectCardCommon.__proto__ || Object.getPrototypeOf(ProjectCardCommon)).call(this, props));\n\n\t\t_this.state = {};\n\t\treturn _this;\n\t}\n\n\t_createClass(ProjectCardCommon, [{\n\t\tkey: 'render',\n\t\tvalue: function render() {\n\t\t\tvar data = this.props.itemdata;\n\t\t\treturn _react2.default.createElement('div', { className: 'eps-list-card' }, _react2.default.createElement('div', { className: 'eps-list-item' }, _react2.default.createElement('label', null, \"\\u5DE5\\u7A0B\\u540D\\u79F0\"), _react2.default.createElement('font', null, data.projectName)), _react2.default.createElement('div', { className: 'eps-list-inline' }, _react2.default.createElement('div', { className: 'eps-list-item' }, _react2.default.createElement('label', null, 'FA Code'), _react2.default.createElement('font', null, data.categoryCode)), _react2.default.createElement('div', { className: 'eps-list-item' }, _react2.default.createElement('label', null, 'FA Code2'), _react2.default.createElement('font', null, data.subCategoryCode))));\n\t\t}\n\t}]);\n\n\treturn ProjectCardCommon;\n}(_react.Component);\n\n/**\n * 选择工程卡片\n */\n\nvar ProjectCardSelect = exports.ProjectCardSelect = function (_Component2) {\n\t_inherits(ProjectCardSelect, _Component2);\n\n\tfunction ProjectCardSelect(props) {\n\t\t_classCallCheck(this, ProjectCardSelect);\n\n\t\tvar _this2 = _possibleConstructorReturn(this, (ProjectCardSelect.__proto__ || Object.getPrototypeOf(ProjectCardSelect)).call(this, props));\n\n\t\t_this2.selectHandler = _this2.selectHandler.bind(_this2);\n\t\treturn _this2;\n\t}\n\n\t_createClass(ProjectCardSelect, [{\n\t\tkey: 'selectHandler',\n\t\tvalue: function selectHandler() {\n\t\t\tvar willbe = !this.props.itemdata.checked;\n\t\t\ttypeof this.props.selectHandler == 'function' ? this.props.selectHandler(this.props.itemdata['id'], { checked: willbe }) : '';\n\t\t}\n\t}, {\n\t\tkey: 'render',\n\t\tvalue: function render() {\n\t\t\treturn _react2.default.createElement('div', { className: 'eps-device-card-select eps-project-card', onClick: this.selectHandler }, _react2.default.createElement(ProjectCardCommon, { itemdata: this.props.itemdata }), _react2.default.createElement('div', { className: 'checked-btn-wrap' }, _react2.default.createElement('i', { className: this.props.itemdata.checked == true ? \"icon-check-active\" : \"icon-check-normal\" })));\n\t\t}\n\t}]);\n\n\treturn ProjectCardSelect;\n}(_react.Component);\n\n;\n\n/**\n * 已添加工程卡片 工程卡片展示\n */\n\nvar ProjectCardListShow = exports.ProjectCardListShow = function (_Component3) {\n\t_inherits(ProjectCardListShow, _Component3);\n\n\tfunction ProjectCardListShow(props) {\n\t\t_classCallCheck(this, ProjectCardListShow);\n\n\t\tvar _this3 = _possibleConstructorReturn(this, (ProjectCardListShow.__proto__ || Object.getPrototypeOf(ProjectCardListShow)).call(this, props));\n\n\t\t_this3.state = {\n\t\t\tchecked: false\n\t\t};\n\t\treturn _this3;\n\t}\n\n\t_createClass(ProjectCardListShow, [{\n\t\tkey: 'deleteItem',\n\t\tvalue: function deleteItem() {\n\t\t\tif (confirm(\"是否确认删除该条记录？\")) {\n\t\t\t\t$(_reactDom2.default.findDOMNode(this.refs.card)).animate({ left: 0 }, '100');\n\t\t\t\tif (typeof this.props.removeItem == 'function') {\n\t\t\t\t\tthis.props.removeItem(this.props.itemdata);\n\t\t\t\t}\n\t\t\t\tconsole.log(\"点击了确认按钮\");\n\t\t\t} else {\n\t\t\t\t$(_reactDom2.default.findDOMNode(this.refs.card)).animate({ left: 0 }, '100');\n\t\t\t\tconsole.log(\"点击了取消按钮\");\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'componentDidMount',\n\t\tvalue: function componentDidMount() {\n\t\t\tvar height = $(_reactDom2.default.findDOMNode(this.refs.cardwrap)).height();\n\t\t\t$(_reactDom2.default.findDOMNode(this.refs.cardwrap)).find('.eps-swipe-wrap').css({\n\t\t\t\t'margin-top': '0'\n\t\t\t\t// 'line-height':(height-20)+'px'\n\t\t\t});\n\n\t\t\tif (this.props.deleteBtnShow != true) return;\n\t\t\t// 显示删除按钮时才绑定hammer事件\n\t\t\tvar hammertime = new _hammerjs2.default(_reactDom2.default.findDOMNode(this.refs.card));\n\t\t\tvar card = $(_reactDom2.default.findDOMNode(this.refs.card));\n\t\t\tvar delBtn = _reactDom2.default.findDOMNode(this.refs.delBtn);\n\t\t\tvar btnWidth = $(delBtn).width();\n\t\t\tvar cardLeft = void 0;\n\t\t\tvar isMinus = void 0; // 是否负数  true 负数  false 正数\n\t\t\tvar cardStartLeft = void 0;\n\t\t\thammertime.on(\"panstart\", function (e) {\n\t\t\t\tcardStartLeft = card.offset().left;\n\t\t\t}\n\t\t\t// hammertime.on( \"pan\", (e)=>{\n\t\t\t// \tisMinus = Math.abs(e.deltaX)==e.deltaX ? false : true;\n\t\t\t// \tcardLeft = (cardStartLeft+e.deltaX) < (-btnWidth) ? (-btnWidth) :  (cardStartLeft+e.deltaX);\n\t\t\t// \tcardLeft = cardLeft > 0 ? 0 : cardLeft;\n\t\t\t// \tcard.css({left:cardLeft});\n\t\t\t// \tconsole.log(e.deltaX,btnWidth);\n\t\t\t// })\n\t\t\t);hammertime.on('panleft', function (e) {\n\t\t\t\tcard.stop().animate({ left: -btnWidth + 'px' }, 200);\n\t\t\t});\n\t\t\thammertime.on('panright', function (e) {\n\t\t\t\tcard.stop().animate({ left: '0px' }, 200);\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'render',\n\t\tvalue: function render() {\n\t\t\tvar _this4 = this;\n\n\t\t\tvar deleteBtn = '';\n\t\t\tif (this.props.deleteBtnShow == true) {\n\t\t\t\tdeleteBtn = _react2.default.createElement('div', { className: 'eps-swipe-delete', ref: 'delBtn', onClick: function onClick(e) {\n\t\t\t\t\t\treturn _this4.deleteItem(e);\n\t\t\t\t\t} }, _react2.default.createElement('div', { className: 'eps-swipe-wrap' }, _react2.default.createElement('font', null, \"\\u5220\\u9664\")));\n\t\t\t}\n\t\t\treturn _react2.default.createElement('div', { className: 'eps-device-card-select eps-project-card', ref: 'cardwrap' }, deleteBtn, _react2.default.createElement('i', { className: 'eps-list-card-bgicon' }), _react2.default.createElement(ProjectCardCommon, { itemdata: this.props.itemdata, showCardIcon: true, ref: 'card' }));\n\t\t}\n\t}]);\n\n\treturn ProjectCardListShow;\n}(_react.Component);\n\n;\n\n/*\n* 审批需要的卡片\n* */\n\nvar ProjectCardMore = exports.ProjectCardMore = function (_Component4) {\n\t_inherits(ProjectCardMore, _Component4);\n\n\tfunction ProjectCardMore(props) {\n\t\t_classCallCheck(this, ProjectCardMore);\n\n\t\tvar _this5 = _possibleConstructorReturn(this, (ProjectCardMore.__proto__ || Object.getPrototypeOf(ProjectCardMore)).call(this, props));\n\n\t\t_this5.state = {\n\t\t\tchecked: false\n\t\t\t// console.log('ProjectCardAssess card====',this.props)\n\t\t};_this5.clickHandler = _this5.clickHandler.bind(_this5);\n\t\treturn _this5;\n\t}\n\n\t_createClass(ProjectCardMore, [{\n\t\tkey: 'clickHandler',\n\t\tvalue: function clickHandler() {\n\t\t\tthis.setState({ 'checked': !this.state.checked });\n\t\t\ttypeof this.props.onClick == 'function' ? this.props.onClick(this.props.itemdata['id']) : '';\n\t\t}\n\t}, {\n\t\tkey: 'render',\n\t\tvalue: function render() {\n\t\t\tvar _this6 = this;\n\n\t\t\tvar data = this.props.itemdata;\n\t\t\tvar showAllData = this.props.showAllData;\n\t\t\tconsole.log(data, 'Marlin 1 这个里面卡片的样式是什么呢', ProjectOperate);\n\t\t\tvar str_operate = data['operate'] ? (0, _constants.getDictVal)('fittingOperation', data['operate']) : ' - ';\n\t\t\tconsole.log('Marlin 2');\n\t\t\treturn _react2.default.createElement('div', { className: 'eps-device-card-select eps-device-card-select-specail' }, _react2.default.createElement('div', { className: this.props.animated == false ? \"eps-list-card\" : \"eps-list-card animated zoomIn\" }, this.props.showCardIcon == false ? '' : _react2.default.createElement('i', { className: 'eps-list-card-bgicon' }), this._init_name(), _react2.default.createElement('div', { className: 'eps-item-info-inline' }, _react2.default.createElement('div', { className: 'eps-item-info' }, _react2.default.createElement('dt', null, _react2.default.createElement('label', null, 'FA Code')), _react2.default.createElement('dd', null, _react2.default.createElement('font', { className: 'ellipsis' }, data.faCategory))), _react2.default.createElement('div', { className: 'eps-item-info' }, _react2.default.createElement('dt', null, _react2.default.createElement('label', null, 'FA Code2')), _react2.default.createElement('dd', null, _react2.default.createElement('font', { className: 'ellipsis' }, data.subCategory)))), data['operate'] != -1 ? _react2.default.createElement('div', { className: 'eps-item-info' }, _react2.default.createElement('dt', null, _react2.default.createElement('label', null, \"\\u5EFA\\u8BAE\\u64CD\\u4F5C\")), _react2.default.createElement('dd', null, _react2.default.createElement('font', { className: 'ellipsis' }, str_operate))) : '', showAllData ? _react2.default.createElement('div', { className: 'eps-list-item-parts border-line-h before', onClick: function onClick(e) {\n\t\t\t\t\treturn _this6.props.openView(e);\n\t\t\t\t} }, \"\\u67E5\\u770B\\u66F4\\u591A\\u5DE5\\u7A0B\\u4FE1\\u606F\") : ''));\n\t\t}\n\t}, {\n\t\tkey: '_init_name',\n\t\tvalue: function _init_name() {\n\t\t\tvar data = this.props.itemdata;\n\t\t\tif (data[\"totalMaintenanceCost\"]) {\n\t\t\t\treturn _react2.default.createElement('div', { className: 'eps-item-info-inline' }, _react2.default.createElement('div', { className: 'eps-item-info' }, _react2.default.createElement('dt', null, _react2.default.createElement('label', null, \"\\u5DE5\\u7A0B\\u540D\\u79F0\")), _react2.default.createElement('dd', null, _react2.default.createElement('font', { className: 'ellipsis' }, data.name))), _react2.default.createElement('div', { className: 'eps-item-info' }, _react2.default.createElement('dt', null, _react2.default.createElement('label', null, \"\\u603B\\u4EF7\")), _react2.default.createElement('dd', null, _react2.default.createElement('font', { className: 'ellipsis' }, Number(data[\"totalMaintenanceCost\"]).formatMoney(2, '', '')))));\n\t\t\t} else {\n\t\t\t\treturn _react2.default.createElement('div', { className: 'eps-item-info' }, _react2.default.createElement('dt', null, _react2.default.createElement('label', null, \"\\u5DE5\\u7A0B\\u540D\\u79F0\")), _react2.default.createElement('dd', null, _react2.default.createElement('font', { className: 'ellipsis' }, data.name)));\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn ProjectCardMore;\n}(_react.Component);\n\n;\n\nvar ProjectCardInfo = exports.ProjectCardInfo = function (_Component5) {\n\t_inherits(ProjectCardInfo, _Component5);\n\n\tfunction ProjectCardInfo(props) {\n\t\t_classCallCheck(this, ProjectCardInfo);\n\n\t\tvar _this7 = _possibleConstructorReturn(this, (ProjectCardInfo.__proto__ || Object.getPrototypeOf(ProjectCardInfo)).call(this, props));\n\n\t\t_this7.state = {\n\t\t\tchecked: false\n\t\t\t// console.log('ProjectCardAssess card====',this.props)\n\t\t};_this7.clickHandler = _this7.clickHandler.bind(_this7);\n\t\treturn _this7;\n\t}\n\n\t_createClass(ProjectCardInfo, [{\n\t\tkey: 'NameInfo',\n\t\tvalue: function NameInfo(name) {\n\t\t\tvar data = this.props.itemdata;\n\t\t\tvar incidentalList = this.props.incidentalList;\n\t\t\tif (name == '1') {\n\t\t\t\tname = Number(incidentalList[\"materialCost\"]).formatMoney(2, '', '') + '(' + (incidentalList[\"materialCostTax\"] || '-') + ')';\n\t\t\t}\n\t\t\tif (name == '2') {\n\t\t\t\tname = Number(incidentalList[\"installationFee\"]).formatMoney(2, '', '') + '(' + (incidentalList[\"installationFeeRate\"] || '-') + ')';\n\t\t\t}\n\t\t\tif (name == '3') {\n\t\t\t\tname = Number(incidentalList[\"carCost\"]).formatMoney(2, '', '') + '(' + (incidentalList[\"carCostTax\"] || '-') + ')';\n\t\t\t}\n\t\t\tif (name == '4') {\n\t\t\t\tname = Number(incidentalList[\"hotelCost\"]).formatMoney(2, '', '') + '(' + (incidentalList[\"hotelCostTax\"] || '-') + ')';\n\t\t\t}\n\t\t\tif (name == '5') {\n\t\t\t\tname = Number(incidentalList[\"testCost\"]).formatMoney(2, '', '') + '(' + (incidentalList[\"testCostTax\"] || '-') + ')';\n\t\t\t}\n\t\t\tif (name == '6') {\n\t\t\t\tname = Number(incidentalList[\"distributionCost\"]).formatMoney(2, '', '') + '(' + (incidentalList[\"distributionCostRate\"] || '-') + ')';\n\t\t\t}\n\t\t\tif (name == '7') {\n\t\t\t\tname = Number(incidentalList[\"highCost\"]).formatMoney(2, '', '') + '(' + (incidentalList[\"highCostTax\"] || '-') + ')';\n\t\t\t}\n\t\t\tif (name == '8') {\n\t\t\t\tname = Number(incidentalList[\"otherCost\"]).formatMoney(2, '', '') + '(' + (incidentalList[\"otherCostTax\"] || '-') + ')';\n\t\t\t}\n\t\t\tif (name == '9') {\n\t\t\t\tname = incidentalList[\"otherCostRemark\"];\n\t\t\t}\n\n\t\t\t// if(DataLength(name)>10){\n\t\t\t(0, _EpsModal.AlertInfoBase)({\n\t\t\t\ttext: name\n\t\t\t});\n\t\t\t// }   \n\t\t}\n\t}, {\n\t\tkey: 'clickHandler',\n\t\tvalue: function clickHandler() {\n\t\t\tthis.setState({ 'checked': !this.state.checked });\n\t\t\ttypeof this.props.onClick == 'function' ? this.props.onClick(this.props.itemdata['id']) : '';\n\t\t}\n\t}, {\n\t\tkey: 'render',\n\t\tvalue: function render() {\n\t\t\tvar self = this;\n\t\t\tvar data = this.props.itemdata;\n\t\t\tvar showAllData = this.props.showAllData;\n\t\t\tvar incidentalList = this.props.incidentalList;\n\t\t\tconsole.log(data, incidentalList, '这个里面有什么呢');\n\t\t\tvar label = ProjectOperate[parseInt(data['operate'])]['label'];\n\t\t\tvar allMoney = 0;\n\t\t\tallMoney += Number(incidentalList['materialCost']) + Number(incidentalList['installationFee']) + Number(incidentalList['carCost']) + Number(incidentalList['hotelCost']) + Number(incidentalList['testCost']) + Number(incidentalList['distributionCost']) + Number(incidentalList['highCost']) + Number(incidentalList['otherCost']);\n\n\t\t\t// let Tax = '';\n\t\t\t// Tax = incidentalList[\"materialCostTax\"];\n\t\t\t// Tax = (?'-')\n\n\t\t\treturn _react2.default.createElement('div', { className: 'todo-card zoomIn specail-zhailei' }, _react2.default.createElement('div', { className: 'todo-card-index' }, this.props.index || 0, '/', this.props.allIndex || 0), _react2.default.createElement('div', { className: 'todo-card-c' }, _react2.default.createElement('div', { className: 'todo-info' }, _react2.default.createElement('div', { className: 'todo-info-i border-line-h after specail' }, _react2.default.createElement('div', { className: 'todo-info-l' }, _react2.default.createElement('span', { className: 'todo-info-label ellipsis' }, \"\\u5DE5\\u7A0B\\u540D\\u79F0\"), _react2.default.createElement('span', { className: 'todo-info-val ellipsis' }, data[\"name\"]))), _react2.default.createElement('div', { className: 'todo-info-i border-line-h after' }, _react2.default.createElement('div', { className: 'todo-info-l' }, _react2.default.createElement('span', { className: 'todo-info-label ellipsis' }, 'FA Code'), _react2.default.createElement('span', { className: 'todo-info-val ellipsis' }, data.faCategory)), _react2.default.createElement('div', { className: 'todo-info-l' }, _react2.default.createElement('span', { className: 'todo-info-label ellipsis' }, 'FA Code2'), _react2.default.createElement('span', { className: 'todo-info-val ellipsis' }, data.subCategory))), _react2.default.createElement('div', { className: 'todo-info-i border-line-h after' }, _react2.default.createElement('div', { className: 'todo-info-l' }, _react2.default.createElement('span', { className: 'todo-info-label ellipsis' }, \"\\u64CD\\u4F5C\\u5EFA\\u8BAE\"), _react2.default.createElement('span', { className: 'todo-info-val ellipsis' }, label))), _react2.default.createElement('div', { className: 'todo-info-i todo-info-money' }, _react2.default.createElement('div', { className: 'todo-info-money-i' }, _react2.default.createElement('div', { className: 'todo-info-money-i-l' }, _react2.default.createElement('div', { className: 'todo-info-money-i-l-label ellipsis' }, \"\\u6750\\u6599\\u8D39\"), _react2.default.createElement('div', { className: 'todo-info-money-i-l-value ellipsis', onClick: function onClick(e) {\n\t\t\t\t\treturn self.NameInfo(1);\n\t\t\t\t} }, Number(incidentalList[\"materialCost\"]).formatMoney(2, '', ''), ' (', incidentalList[\"materialCostTax\"] || '-', ')')), _react2.default.createElement('div', { className: 'todo-info-money-i-r' }, _react2.default.createElement('div', { className: 'todo-info-money-i-l-label ellipsis' }, \"\\u4EBA\\u5DE5\\u8D39\"), _react2.default.createElement('div', { className: 'todo-info-money-i-l-value ellipsis', onClick: function onClick(e) {\n\t\t\t\t\treturn self.NameInfo(2);\n\t\t\t\t} }, Number(incidentalList[\"installationFee\"]).formatMoney(2, '', ''), ' (', incidentalList[\"installationFeeRate\"] || '-', ')'))), _react2.default.createElement('div', { className: 'todo-info-money-i' }, _react2.default.createElement('div', { className: 'todo-info-money-i-l' }, _react2.default.createElement('div', { className: 'todo-info-money-i-l-label ellipsis' }, \"\\u4EA4\\u901A\\u8D39\"), _react2.default.createElement('div', { className: 'todo-info-money-i-l-value ellipsis', onClick: function onClick() {\n\t\t\t\t\treturn self.NameInfo(3);\n\t\t\t\t} }, Number(incidentalList[\"carCost\"]).formatMoney(2, '', ''), ' (', incidentalList[\"carCostTax\"] || '-', ')')), _react2.default.createElement('div', { className: 'todo-info-money-i-r' }, _react2.default.createElement('div', { className: 'todo-info-money-i-l-label ellipsis' }, \"\\u4F4F\\u5BBF\\u8D39\"), _react2.default.createElement('div', { className: 'todo-info-money-i-l-value ellipsis', onClick: function onClick() {\n\t\t\t\t\treturn self.NameInfo(4);\n\t\t\t\t} }, Number(incidentalList[\"hotelCost\"]).formatMoney(2, '', ''), ' (', incidentalList[\"hotelCostTax\"] || '-', ')'))), _react2.default.createElement('div', { className: 'todo-info-money-i' }, _react2.default.createElement('div', { className: 'todo-info-money-i-l' }, _react2.default.createElement('div', { className: 'todo-info-money-i-l-label ellipsis' }, \"\\u68C0\\u6D4B\\u8D39\"), _react2.default.createElement('div', { className: 'todo-info-money-i-l-value ellipsis', onClick: function onClick() {\n\t\t\t\t\treturn self.NameInfo(5);\n\t\t\t\t} }, Number(incidentalList[\"testCost\"]).formatMoney(2, '', ''), ' (', incidentalList[\"testCostTax\"] || '-', ')')), _react2.default.createElement('div', { className: 'todo-info-money-i-r' }, _react2.default.createElement('div', { className: 'todo-info-money-i-l-label ellipsis' }, \"\\u8FD0\\u8F93\\u8D39\"), _react2.default.createElement('div', { className: 'todo-info-money-i-l-value ellipsis', onClick: function onClick() {\n\t\t\t\t\treturn self.NameInfo(6);\n\t\t\t\t} }, Number(incidentalList[\"distributionCost\"]).formatMoney(2, '', ''), ' (', incidentalList[\"distributionCostRate\"] || '-', ')'))), _react2.default.createElement('div', { className: 'todo-info-money-i' }, _react2.default.createElement('div', { className: 'todo-info-money-i-l' }, _react2.default.createElement('div', { className: 'todo-info-money-i-l-label ellipsis' }, \"\\u767B\\u9AD8\\u8D39\"), _react2.default.createElement('div', { className: 'todo-info-money-i-l-value ellipsis', onClick: function onClick() {\n\t\t\t\t\treturn self.NameInfo(7);\n\t\t\t\t} }, Number(incidentalList[\"highCost\"]).formatMoney(2, '', ''), ' (', incidentalList[\"highCostTax\"] || '-', ')')), _react2.default.createElement('div', { className: 'todo-info-money-i-r' }, _react2.default.createElement('div', { className: 'todo-info-money-i-l-label ellipsis' }, \"\\u5176\\u4ED6\\u8D39\\u7528\"), _react2.default.createElement('div', { className: 'todo-info-money-i-l-value ellipsis', onClick: function onClick() {\n\t\t\t\t\treturn self.NameInfo(8);\n\t\t\t\t} }, Number(incidentalList[\"otherCost\"]).formatMoney(2, '', ''), ' (', incidentalList[\"otherCostTax\"] || '-', ')'))), _react2.default.createElement('div', { className: 'todo-info-money-i specail' }, _react2.default.createElement('div', { className: 'todo-info-money-i-l' }, _react2.default.createElement('div', { className: 'todo-info-money-i-l-label' }, \"\\u5176\\u4ED6\\u8D39\\u7528\\u5907\\u6CE8\"), _react2.default.createElement('div', { className: 'todo-info-money-i-l-value ellipsis', onClick: function onClick() {\n\t\t\t\t\treturn self.NameInfo(9);\n\t\t\t\t} }, incidentalList[\"otherCostRemark\"]))), _react2.default.createElement('div', { className: 'todo-info-money-i' }, _react2.default.createElement('div', { className: 'todo-info-money-i-l' }, _react2.default.createElement('div', { className: 'todo-info-money-i-l-label ellipsis' }, \"\\u603B\\u4EF7\"), _react2.default.createElement('div', { className: 'todo-info-money-i-l-value ellipsis' }, Number(allMoney).formatMoney(2, '', ''))))))));\n\t\t}\n\t}, {\n\t\tkey: '_init_name',\n\t\tvalue: function _init_name() {\n\t\t\tvar data = this.props.itemdata;\n\t\t\tif (data[\"totalMaintenanceCost\"]) {\n\t\t\t\treturn _react2.default.createElement('div', { className: 'eps-item-info-inline' }, _react2.default.createElement('div', { className: 'eps-item-info' }, _react2.default.createElement('dt', null, _react2.default.createElement('label', null, \"\\u5DE5\\u7A0B\\u540D\\u79F0\")), _react2.default.createElement('dd', null, _react2.default.createElement('font', { className: 'ellipsis' }, data.name))), _react2.default.createElement('div', { className: 'eps-item-info' }, _react2.default.createElement('dt', null, _react2.default.createElement('label', null, \"\\u603B\\u4EF7\")), _react2.default.createElement('dd', null, _react2.default.createElement('font', { className: 'ellipsis' }, Number(data[\"totalMaintenanceCost\"]).formatMoney(2, '', '')))));\n\t\t\t} else {\n\t\t\t\treturn _react2.default.createElement('div', { className: 'eps-item-info' }, _react2.default.createElement('dt', null, _react2.default.createElement('label', null, \"\\u5DE5\\u7A0B\\u540D\\u79F0\")), _react2.default.createElement('dd', null, _react2.default.createElement('font', { className: 'ellipsis' }, data.name)));\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn ProjectCardInfo;\n}(_react.Component);\n\n/***/ }),\n\n/***/ 1781:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () {\n\tfunction defineProperties(target, props) {\n\t\tfor (var i = 0; i < props.length; i++) {\n\t\t\tvar descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n\t\t}\n\t}return function (Constructor, protoProps, staticProps) {\n\t\tif (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n\t};\n}();\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _dva = __webpack_require__(193);\n\nfunction _interopRequireDefault(obj) {\n\treturn obj && obj.__esModule ? obj : { default: obj };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n\tif (!(instance instanceof Constructor)) {\n\t\tthrow new TypeError(\"Cannot call a class as a function\");\n\t}\n}\n\nfunction _possibleConstructorReturn(self, call) {\n\tif (!self) {\n\t\tthrow new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n\t}return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n\tif (typeof superClass !== \"function\" && superClass !== null) {\n\t\tthrow new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n\t}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} /**\n   * 工程类头部用户信息\n   * demo\n   * <header className=\"header header-4lines\" ref=\"header\">\n  \t\t\t\t\t<div className=\"header-bg\"></div>\n  \t\t\t\t\t<div className=\"header-bg-2\"></div>\n  \t\t\t\t\t<div className=\"header-c\">\n  \t\t\t\t\t\t<UserCardToProject userinfo={ userinfo }/>\n  \t\t\t\t\t</div>\n  \t\t\t\t</header>\n   */\n\nvar UserCardToProject = function (_Component) {\n\t_inherits(UserCardToProject, _Component);\n\n\tfunction UserCardToProject() {\n\t\t_classCallCheck(this, UserCardToProject);\n\n\t\treturn _possibleConstructorReturn(this, (UserCardToProject.__proto__ || Object.getPrototypeOf(UserCardToProject)).apply(this, arguments));\n\t}\n\n\t_createClass(UserCardToProject, [{\n\t\tkey: 'openWebView',\n\t\tvalue: function openWebView(data) {\n\t\t\tvar url = EpsWebRoot + '/#' + data;\n\t\t\tvar datas = this.props.data;\n\t\t\twindow.upTabsData('remark', 'cache', datas);\n\t\t\tjw.pushWebView(url);\n\t\t}\n\t}, {\n\t\tkey: 'openFileView',\n\t\tvalue: function openFileView(data) {\n\t\t\tvar url = EpsWebRoot + '/#' + data;\n\t\t\tvar datas = this.props.data;\n\t\t\twindow.upTabsData('file', 'cache', datas);\n\t\t\tjw.pushWebView(url);\n\t\t}\n\t}, {\n\t\tkey: 'openScrapView',\n\t\tvalue: function openScrapView() {\n\t\t\tvar datas = this.props.data;\n\t\t\tvar url = EpsWebRoot + '/#/scrapped/' + datas[\"orderNumber\"];\n\t\t\twindow.upTabsData('scrap', 'cache', datas);\n\t\t\tjw.pushWebView(url);\n\t\t}\n\t}, {\n\t\tkey: 'initRepairType',\n\t\tvalue: function initRepairType() {\n\t\t\tvar data = this.props.data || { name: '', time: '', 'storeName': '', remark: '', repairType: '' };\n\t\t\tif (data['repairType']) {\n\t\t\t\treturn data['repairType'] == '0' ? '预约' : '紧急';\n\t\t\t} else {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'render',\n\t\tvalue: function render() {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar data = this.props.data || { name: '', time: '', 'storeName': '', remark: '', repairType: '' };\n\t\t\tvar orderid = window.location.href.split('?updateDate')[0].split('/');\n\t\t\torderid = orderid[orderid.length - 1];\n\t\t\tvar fileUrl = '/file/' + orderid;\n\t\t\tif (window.isUnfinishedOrHistory()) {\n\t\t\t\tfileUrl = '/filehistory/' + orderid;\n\t\t\t}\n\t\t\treturn _react2.default.createElement('div', { className: 'user-card' }, _react2.default.createElement('div', { className: 'user-card-c' }, _react2.default.createElement('div', { className: 'user-card-avatar' }, _react2.default.createElement('img', { src: data[\"avatar\"] ? data['avatar'][\"avatar_s\"] : 'https://www.joywok.com/public/images/avatar/l.jpg', alt: '' })), _react2.default.createElement('div', { className: 'user-card-info' }, _react2.default.createElement('div', { className: 'user-card-info-i' }, _react2.default.createElement('span', { className: 'user-card-label' }, \"\\u521B\\u5EFA\\u4EBA\"), _react2.default.createElement('span', { className: 'user-card-val' }, data['name'] || '-')), _react2.default.createElement('div', { className: 'user-card-info-i' }, _react2.default.createElement('span', { className: 'user-card-label' }, \"\\u62A5\\u4FEE\\u7C7B\\u578B\"), _react2.default.createElement('span', { className: 'user-card-val' }, this.initRepairType()), data['repairType'] == '0' ? _react2.default.createElement('span', { className: 'user-card-time' }, data['time'] ? moment(data['time']).format('YYYY-MM-DD HH:mm') : '-') : ''), _react2.default.createElement('div', { className: 'user-card-info-i' }, _react2.default.createElement('span', { className: 'user-card-label' }, \"\\u62A5\\u4FEE\\u9910\\u5385\"), _react2.default.createElement('span', { className: 'user-card-val' }, data[\"storeName\"] || '-')), _react2.default.createElement('div', { className: 'user-card-info-btns' }, data['remark'] && data['remark'].length != 0 ? _react2.default.createElement('div', { className: 'user-card-info-btn', onClick: function onClick(e) {\n\t\t\t\t\treturn _this2.openWebView('/remarksdetail');\n\t\t\t\t} }, _react2.default.createElement('div', { className: 'user-card-info-btn-bg' }), _react2.default.createElement('div', { className: 'user-card-info-btn-val' }, \"\\u67E5\\u770B\\u5907\\u6CE8\")) : '', _react2.default.createElement('div', { className: 'user-card-info-btn', onClick: function onClick(e) {\n\t\t\t\t\treturn _this2.openFileView(fileUrl);\n\t\t\t\t} }, _react2.default.createElement('div', { className: 'user-card-info-btn-bg' }), _react2.default.createElement('div', { className: 'user-card-info-btn-val preview-file' }, \"\\u67E5\\u770B\\u9644\\u4EF6\", data['fileCount'] && data['fileCount'] != 0 ? '(' + data['fileCount'] + ')' : '')), data['showScrapTip'] ? _react2.default.createElement('div', { className: 'user-card-info-btn', onClick: function onClick(e) {\n\t\t\t\t\treturn _this2.openScrapView(e);\n\t\t\t\t} }, _react2.default.createElement('div', { className: 'user-card-info-btn-bg' }), _react2.default.createElement('div', { className: 'user-card-info-btn-val preview-file' }, \"\\u8D44\\u4EA7\\u62A5\\u5E9F\", data['scrapPageInfo'] && data['scrapPageInfo'][\"total\"] != 0 ? '(' + data['scrapPageInfo'][\"total\"] + ')' : '')) : ''))));\n\t\t}\n\t}]);\n\n\treturn UserCardToProject;\n}(_react.Component);\n\n;\n\nexports.default = (0, _dva.connect)(function (state) {\n\treturn state;\n})(UserCardToProject);\n\n/***/ }),\n\n/***/ 1847:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () {\n\tfunction defineProperties(target, props) {\n\t\tfor (var i = 0; i < props.length; i++) {\n\t\t\tvar descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n\t\t}\n\t}return function (Constructor, protoProps, staticProps) {\n\t\tif (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n\t};\n}();\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = __webpack_require__(28);\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _dva = __webpack_require__(193);\n\nvar _LoadMore = __webpack_require__(1109);\n\nvar _LoadMore2 = _interopRequireDefault(_LoadMore);\n\nvar _UserCardToProject = __webpack_require__(1781);\n\nvar _UserCardToProject2 = _interopRequireDefault(_UserCardToProject);\n\nvar _ProjectCard = __webpack_require__(1151);\n\nfunction _interopRequireDefault(obj) {\n\treturn obj && obj.__esModule ? obj : { default: obj };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n\tif (!(instance instanceof Constructor)) {\n\t\tthrow new TypeError(\"Cannot call a class as a function\");\n\t}\n}\n\nfunction _possibleConstructorReturn(self, call) {\n\tif (!self) {\n\t\tthrow new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n\t}return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n\tif (typeof superClass !== \"function\" && superClass !== null) {\n\t\tthrow new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n\t}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} /**\n   * 工程明细\n   */\n\nvar ProjectInfo = function (_Component) {\n\t_inherits(ProjectInfo, _Component);\n\n\tfunction ProjectInfo(props) {\n\t\t_classCallCheck(this, ProjectInfo);\n\n\t\tvar store = new Store('Joywok:cache:tabs:log');\n\t\tvar cache = store.find({ id: 'tab:cache' }) || {};\n\t\tif (cache['id']) {\n\t\t\tprops['projectinfo']['parentData'] = cache[\"data\"];\n\t\t}\n\t\treturn _possibleConstructorReturn(this, (ProjectInfo.__proto__ || Object.getPrototypeOf(ProjectInfo)).call(this, props));\n\t}\n\n\t_createClass(ProjectInfo, [{\n\t\tkey: 'render',\n\t\tvalue: function render() {\n\t\t\tvar view = this._init_view();\n\t\t\treturn _react2.default.createElement('div', { className: 'root-container' }, view);\n\t\t}\n\t}, {\n\t\tkey: '_init_view',\n\t\tvalue: function _init_view() {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar view = '';\n\t\t\tvar data = this.props.projectinfo;\n\t\t\tview = _react2.default.createElement('div', { className: 'root-container-w' }, _react2.default.createElement('header', { className: 'header', ref: 'header' }, _react2.default.createElement('div', { className: 'header-bg-specail' }, _react2.default.createElement('div', { className: 'header-bg' }), _react2.default.createElement('div', { className: 'header-bg-2' })), _react2.default.createElement('div', { className: 'header-c' })), _react2.default.createElement('sesstion', { className: 'main' }, _react2.default.createElement('div', { className: 'main-c', style: {\n\t\t\t\t\tpaddingBottom: '20px'\n\t\t\t\t} }, _.map(data['list'], function (i, index) {\n\t\t\t\tvar incidentalList = _.findWhere(data['incidentalList'], { deviceNumber: i['deviceNumber'] });\n\t\t\t\treturn _react2.default.createElement(_ProjectCard.ProjectCardInfo, { itemdata: _.extend(i, {\n\t\t\t\t\t\tname: i[\"deviceName\"]\n\t\t\t\t\t}), incidentalList: incidentalList, showAllData: false, index: index + 1, allIndex: data['incidentalList'].length });\n\t\t\t}), _react2.default.createElement(_LoadMore2.default, { container: 'main-c', data: data['loading'], onEndReached: function onEndReached(e) {\n\t\t\t\t\t_this2.onEndReached(e);\n\t\t\t\t} }))));\n\t\t\treturn view;\n\t\t}\n\t}, {\n\t\tkey: 'openWebView',\n\t\tvalue: function openWebView(data) {\n\t\t\tvar url = EpsWebRoot + '/#' + data;\n\t\t\tjw.pushWebView(url);\n\t\t}\n\t}, {\n\t\tkey: 'componentDidMount',\n\t\tvalue: function componentDidMount() {\n\t\t\tvar self = this;\n\t\t\tvar dispatch = this.props.dispatch;\n\t\t\tvar modelData = this.props.projectinfo;\n\t\t\tvar orderid = this.props.params.orderid.split(\"&\")[0];\n\t\t\tthis.setHeight();\n\t\t\tdispatch({ type: 'projectinfo/fetch', payload: orderid });\n\t\t}\n\t}, {\n\t\tkey: 'componentDidUpdate',\n\t\tvalue: function componentDidUpdate() {\n\t\t\tvar self = this;\n\t\t\tthis.setHeight();\n\t\t}\n\t}, {\n\t\tkey: 'setHeight',\n\t\tvalue: function setHeight() {\n\t\t\tvar self = this;\n\t\t\tsetTimeout(function () {\n\t\t\t\tvar clientHeight = document.documentElement.clientHeight || document.body.clientHeight;\n\t\t\t\tvar header = $('.header').height() || 0;\n\t\t\t\t$('.main-c').css({ height: clientHeight - header + 'px' });\n\t\t\t}, 0);\n\t\t}\n\t}]);\n\n\treturn ProjectInfo;\n}(_react.Component);\n\nfunction mapStateToProps(state) {\n\treturn state;\n}\nexports.default = (0, _dva.connect)(mapStateToProps)(ProjectInfo);\n\n/***/ }),\n\n/***/ 1895:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }return target;\n};\n\nvar _EpsRequest = __webpack_require__(196);\n\nvar _EpsRequest2 = _interopRequireDefault(_EpsRequest);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\nfunction FirstFetch(parame) {\n  return (0, _EpsRequest2.default)('/McdEpsApi/joywok/repair/getStoreEvaluate', {\n    method: 'POST',\n    body: JSON.stringify({\n      param: {\n        eid: window.eid,\n        condition: {\n          orderNumber: parame\n        },\n        pager: { 'pageNum': '1', 'pageSize': '1000' }\n      }\n    })\n  });\n}\nexports.default = {\n  namespace: 'projectinfo',\n  state: {\n    loading: {\n      loading: true,\n      fix: true,\n      hide: false\n    }\n  },\n  reducers: {\n    changeData: function changeData(state, action) {\n      return _extends({}, state, action.payload);\n    }\n  },\n  effects: {\n    fetch: regeneratorRuntime.mark(function fetch(_ref, _ref2) {\n      var payload = _ref.payload;\n      var call = _ref2.call,\n          put = _ref2.put,\n          select = _ref2.select;\n      var datas, secondData, loading, allData;\n      return regeneratorRuntime.wrap(function fetch$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return select();\n\n            case 2:\n              datas = _context.sent;\n              _context.next = 5;\n              return call(FirstFetch, payload);\n\n            case 5:\n              secondData = _context.sent;\n\n              // console.log(secondData,'这个里面有什么数据ne');\n              loading = datas[\"projectinfo\"]['loading'];\n\n              loading['loading'] = false;\n              loading['hide'] = true;\n              loading['fix'] = false;\n              // let allData = _.extend({\n              // \tloading:loading\n              // },firstData['data']['body'],secondData['data']['body'],{\n              // \tlist:firstData['data']['body'][\"pageInfo\"]['detailList']\n              // })\n              allData = _.extend({\n                loading: loading\n              }, secondData['data']['body'], {\n                list: secondData['data']['body'][\"detailList\"].length != 0 ? secondData['data']['body'][\"detailList\"] : secondData['data']['body'][\"orderList\"][\"list\"]\n              });\n\n              NProgress.done();\n              _context.next = 14;\n              return put({\n                type: 'changeData',\n                payload: allData\n              });\n\n            case 14:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, fetch, this);\n    })\n  },\n  subscriptions: {}\n};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// scripts/chunk/Repair/ProjectInfo.js?v=3ae520bd","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/hammerjs/hammer.js\n// module id = 1104\n// module chunks = 11 14 15 18 20 22 27 28 29 30 31 32 33 34 35 36 37 39 41 42 43 44 45 46 51 52 53 54","/**\n * 加载组件\n *\n * 功能说明: 列表下拉加载更多\n * 使用说明：\n * \t\t(1) demo案例\n * \t\t\t\tlet bindtoref = this.refs.listwrap;\n * \t\t\t\tlet onEndReached = (pageno)=>{\n * \t\t\t\t\t// fetchdata by pageno\n * \t\t\t\t\t// set loading = true\n * \t\t\t\t\t// fetchdata end \n * \t\t\t\t\t// set loading = false\n * \t\t\t\t}\n * \t\t\t\t<LoadMore pagesize=20 totalnum=200 pageno=0 loading={ false } bindtoref={ bindtoref } onEndReached={ ()=>{this.onEndReached(pageno)} }/>\n * \t\t(2) 参数说明\n * \t\t\tpagesize number  每页条数  可选\n * \t\t\ttotalnum number  总条数   必填\n * \t\t\tpageno  number  当前页数  必填\n * \t\t\tloading  bool   加载状态  必填\n * \t\t\tbindtoref react component's ref  监听滚动事件的宿主 可选  默认为body scroll\n * \t\t\tonEndReached 回调函数  到达底部后回调事件，回调中可以根据pageno去加载下一页数据\n *\n */\nimport React,{ Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'dva';\n\nclass LoadMore extends Component{\n\trender(){\n\t\tlet data = this.props.data;\n\t\treturn (\n\t\t\t<div className={\"loading-bounce-w \"+(data['hide']?'hide':'')+' '+(data['fix']?'fix':'')}>\n\t\t\t\t<div className=\"loading-bounce-bg\"></div>\n\t\t\t\t<div className=\"loading-gif\">\n\t\t\t\t\t<img src=\"images/loading.gif\" />\n\t\t\t\t</div>\n\t\t\t</div>);\n\t}\n\tcomponentDidMount(){\n\t\tlet self = this;\n\t\tlet data = this.props.data;\n\t\tconsole.log('Marlin LoadMore end',data)\n\t\tif(this.props['container']){\n\t\t\tconsole.log(\"container\",this.props['container'])\n\t\t\t$(\".\"+this.props['container']).on(\"scroll\",function(evt){\n\t\t\t\t\n\t\t\t\tif(data['fix'] || data['loading']) return;\n\n\t\t\t\tconsole.log('Marlin fixed',data['fix'],data['loading']);\n\t\t\t\t\n\t\t\t\tlet scrollTop = $('.'+self.props['container']).scrollTop();\n\t\t\t\tlet clientHeight = $('.'+self.props['container']).height();\n\t\t\t\tlet target = $('.loading-bounce-w');\n\t\t\t\t// let target = $('.todos-list-loadmore');\n\t\t\t\tif(target.length==0) return;\n\n\t\t\t\tif(clientHeight+80>=target.offset().top){\n\t\t\t\t\tconsole.log('Marlin Top',clientHeight,target.offset().top)\n\t\t\t\t\tself.props.onEndReached(evt);\n\t\t\t\t\t// $(this).unbind('scroll');\n\t\t\t\t}\n\n\t\t\t})\n\t\t}else{\n\t\t}\n\t}\n};\n\nLoadMore.propTypes = {\n};\n\nexport default connect(function(state){return state})(LoadMore);\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/components/Common/LoadMore.js","/**\n * 工程卡片\n */\nimport React,{ Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Hammer from 'hammerjs';\nimport { connect } from 'dva';\nimport { getDict,getDictVal } from './../../constants';\n\nimport {AlertInfoBase} from '../../components/Common/EpsModal';\nlet ProjectOperate = getDict('equipmentOperation');\n/*\n * 工程卡片的公共展示部分\n */\nclass ProjectCardCommon extends Component{\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {}\n\t}\n\trender(){\n\t\tlet data = this.props.itemdata;\n\t\treturn (\n\t\t\t<div className=\"eps-list-card\">\n\t\t\t\t<div className=\"eps-list-item\">\n\t\t\t\t\t<label>工程名称</label>\n\t\t\t\t\t<font>{ data.projectName }</font>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"eps-list-inline\">\n\t\t\t\t\t<div className=\"eps-list-item\">\n\t\t\t\t\t\t<label>FA Code</label>\n\t\t\t\t\t\t<font>{ data.categoryCode }</font>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"eps-list-item\">\n\t\t\t\t\t\t<label>FA Code2</label>\n\t\t\t\t\t\t<font>{ data.subCategoryCode }</font>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n/**\n * 选择工程卡片\n */\nexport class ProjectCardSelect extends Component{\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.selectHandler = this.selectHandler.bind(this);\n\t}\n\n\tselectHandler(){\n\t\tlet willbe = !this.props.itemdata.checked;\n\t\ttypeof(this.props.selectHandler)=='function' ? this.props.selectHandler(this.props.itemdata['id'],{ checked: willbe }) : '';\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<div className=\"eps-device-card-select eps-project-card\" onClick={ this.selectHandler }>\n\t\t\t\t<ProjectCardCommon itemdata={ this.props.itemdata } />\n\t\t\t\t<div className=\"checked-btn-wrap\"><i className={ this.props.itemdata.checked==true ? \"icon-check-active\" : \"icon-check-normal\"}></i></div>\n\t\t\t</div>\n\t\t)\n\t}\n\n};\n\n\n/**\n * 已添加工程卡片 工程卡片展示\n */\nexport class ProjectCardListShow extends Component{\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tchecked: false\n\t\t}\n\t}\n\tdeleteItem(){\n\t\tif(confirm(\"是否确认删除该条记录？\")){\n\t\t\t$(ReactDOM.findDOMNode(this.refs.card)).animate({left: 0},'100');\n\t\t\tif(typeof(this.props.removeItem) == 'function'){\n\t\t\t\tthis.props.removeItem(this.props.itemdata);\n\t\t\t}\n\t  \tconsole.log(\"点击了确认按钮\");\n\t  }\n\t  else{\n\t\t\t$(ReactDOM.findDOMNode(this.refs.card)).animate({left: 0},'100');\n\t\t  console.log(\"点击了取消按钮\");\n\t  }\n\t}\n\n\tcomponentDidMount(){\n\t\tlet height = $(ReactDOM.findDOMNode(this.refs.cardwrap)).height();\n\t\t$(ReactDOM.findDOMNode(this.refs.cardwrap)).find('.eps-swipe-wrap').css({\n\t\t\t'margin-top':'0',\n\t\t\t// 'line-height':(height-20)+'px'\n\t\t})\n\n\t\tif(this.props.deleteBtnShow != true) return;\n\t\t// 显示删除按钮时才绑定hammer事件\n\t\tlet hammertime = new Hammer(ReactDOM.findDOMNode(this.refs.card));\n\t\tlet card = $(ReactDOM.findDOMNode(this.refs.card));\n\t\tlet delBtn = ReactDOM.findDOMNode(this.refs.delBtn);\n\t\tlet btnWidth = $(delBtn).width();\n\t\tlet cardLeft;\n\t\tlet isMinus; // 是否负数  true 负数  false 正数\n\t\tlet cardStartLeft;\n\t\thammertime.on( \"panstart\", (e)=>{\n\t\t\tcardStartLeft = card.offset().left;\n\t\t})\n\t\t// hammertime.on( \"pan\", (e)=>{\n\t\t// \tisMinus = Math.abs(e.deltaX)==e.deltaX ? false : true;\n\t\t// \tcardLeft = (cardStartLeft+e.deltaX) < (-btnWidth) ? (-btnWidth) :  (cardStartLeft+e.deltaX);\n\t\t// \tcardLeft = cardLeft > 0 ? 0 : cardLeft;\n\t\t// \tcard.css({left:cardLeft});\n\t\t// \tconsole.log(e.deltaX,btnWidth);\n\t\t// })\n\t\thammertime.on('panleft',(e)=>{\n\t\t\tcard.stop().animate({left:-btnWidth+'px'},200);\n\t\t})\n\t\thammertime.on('panright',(e)=>{\n\t\t\tcard.stop().animate({left:'0px'},200);\n\t\t})\n\t}\n\n\trender(){\n\t\tlet deleteBtn = '';\n\t\tif(this.props.deleteBtnShow == true){\n\t\t\tdeleteBtn = (<div className=\"eps-swipe-delete\" ref=\"delBtn\" onClick={ (e)=>this.deleteItem(e) }><div className=\"eps-swipe-wrap\"><font>删除</font></div></div>);\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"eps-device-card-select eps-project-card\" ref=\"cardwrap\">\n\t\t\t\t{ deleteBtn }\n\t\t\t\t<i className=\"eps-list-card-bgicon\"></i>\n\t\t\t\t<ProjectCardCommon itemdata={ this.props.itemdata } showCardIcon={ true } ref=\"card\"/>\n\t\t\t</div>\n\t\t)\n\t}\n};\n\n\n\n/*\n* 审批需要的卡片\n* */\n\nexport class ProjectCardMore extends Component{\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tchecked: false\n\t\t}\n\t\t// console.log('ProjectCardAssess card====',this.props)\n\t\tthis.clickHandler = this.clickHandler.bind(this);\n\t}\n\tclickHandler(){\n\t\tthis.setState({'checked': !this.state.checked});\n\t\ttypeof(this.props.onClick)=='function' ? this.props.onClick(this.props.itemdata['id']) : '';\n\t}\n\trender(){\n\t\tlet data = this.props.itemdata;\n\t\tlet showAllData = this.props.showAllData;\n\t\tconsole.log(data,'Marlin 1 这个里面卡片的样式是什么呢',ProjectOperate);\n\t\tlet str_operate = data['operate']?getDictVal('fittingOperation',data['operate']):' - ';\n    console.log('Marlin 2');\n\t\treturn (\n\t\t\t<div className=\"eps-device-card-select eps-device-card-select-specail\">\n\t\t\t\t<div className={ this.props.animated==false ? \"eps-list-card\" : \"eps-list-card animated zoomIn\" }>\n\t\t\t\t\t{ this.props.showCardIcon==false ? '' : (<i className=\"eps-list-card-bgicon\"></i>) }\n\t\t\t\t\t{this._init_name()}\n\t\t\t\t\t<div className=\"eps-item-info-inline\">\n\t\t\t\t\t\t<div className=\"eps-item-info\"><dt><label>FA Code</label></dt><dd><font className=\"ellipsis\">{ data.faCategory }</font></dd></div>\n\t\t\t\t\t\t<div className=\"eps-item-info\"><dt><label>FA Code2</label></dt><dd><font className=\"ellipsis\">{ data.subCategory }</font></dd></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{\n\t\t\t\t\t\tdata['operate']!=-1?<div className=\"eps-item-info\"><dt><label>建议操作</label></dt><dd><font className=\"ellipsis\">{ str_operate }</font></dd></div>:''\n\t\t\t\t\t}\n\t\t\t\t\t{\n\t\t\t\t\t\tshowAllData?<div className=\"eps-list-item-parts border-line-h before\" onClick={(e)=>this.props.openView(e)}>查看更多工程信息</div>:''\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\t_init_name(){\n\t\tlet data = this.props.itemdata;\n\t\tif(data[\"totalMaintenanceCost\"]){\n\t\t\treturn <div className=\"eps-item-info-inline\">\n\t\t\t\t<div className=\"eps-item-info\"><dt><label>工程名称</label></dt><dd><font className=\"ellipsis\">{ data.name }</font></dd></div>\n\t\t\t\t<div className=\"eps-item-info\"><dt><label>总价</label></dt><dd><font className=\"ellipsis\">{Number(data[\"totalMaintenanceCost\"]).formatMoney(2,'','')}</font></dd></div>\n\t\t\t</div>\n\t\t}else{\n\t\t\treturn <div className=\"eps-item-info\"><dt><label>工程名称</label></dt><dd><font className=\"ellipsis\">{ data.name }</font></dd></div>\n\t\t}\n\t}\n};\n\n\nexport class ProjectCardInfo extends Component{\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tchecked: false\n\t\t}\n\t\t// console.log('ProjectCardAssess card====',this.props)\n\t\tthis.clickHandler = this.clickHandler.bind(this);\n\t}\n\tNameInfo(name){\n\t\tlet data = this.props.itemdata;\n\t\tlet incidentalList = this.props.incidentalList;\n\t\tif(name == '1'){\n\t\t\tname = Number(incidentalList[\"materialCost\"]).formatMoney(2,'','')+'('+(incidentalList[\"materialCostTax\"] || '-')+')'\n\t\t}\n\t\tif(name == '2'){\n\t\t\tname = Number(incidentalList[\"installationFee\"]).formatMoney(2,'','')+'('+(incidentalList[\"installationFeeRate\"] || '-')+')'\n\t\t}\n\t\tif(name == '3'){\n\t\t\tname = Number(incidentalList[\"carCost\"]).formatMoney(2,'','')+'('+(incidentalList[\"carCostTax\"] || '-')+')'\n\t\t}\n\t\tif(name == '4'){\n\t\t\tname = Number(incidentalList[\"hotelCost\"]).formatMoney(2,'','')+'('+(incidentalList[\"hotelCostTax\"] || '-')+')'\n\t\t}\n\t\tif(name == '5'){\n\t\t\tname = Number(incidentalList[\"testCost\"]).formatMoney(2,'','')+'('+(incidentalList[\"testCostTax\"] || '-')+')'\n\t\t}\n\t\tif(name == '6'){\n\t\t\tname = Number(incidentalList[\"distributionCost\"]).formatMoney(2,'','')+'('+(incidentalList[\"distributionCostRate\"] || '-')+')'\n\t\t}\n\t\tif(name == '7'){\n\t\t\tname = Number(incidentalList[\"highCost\"]).formatMoney(2,'','')+'('+(incidentalList[\"highCostTax\"] || '-')+')'\n\t\t}\n\t\tif(name == '8'){\n\t\t\tname = Number(incidentalList[\"otherCost\"]).formatMoney(2,'','')+'('+(incidentalList[\"otherCostTax\"] || '-')+')'\n\t\t}\n    if(name == '9'){\n      name = incidentalList[\"otherCostRemark\"];\n    }\n\n\t  // if(DataLength(name)>10){\n\t\tAlertInfoBase({\n      text: name,\n    });\n\t\t// }   \n\t}\n\tclickHandler(){\n\t\tthis.setState({'checked': !this.state.checked});\n\t\ttypeof(this.props.onClick)=='function' ? this.props.onClick(this.props.itemdata['id']) : '';\n\t}\n\trender(){\n\t\tlet self = this;\n\t\tlet data = this.props.itemdata;\n\t\tlet showAllData = this.props.showAllData;\n\t\tlet incidentalList = this.props.incidentalList;\n\t\tconsole.log(data,incidentalList,'这个里面有什么呢');\n\t\tlet label = ProjectOperate[parseInt(data['operate'])]['label'];\n\t\tlet allMoney =0;\n\t\tallMoney+=(Number(incidentalList['materialCost'])+Number(incidentalList['installationFee'])+Number(incidentalList['carCost'])+Number(incidentalList['hotelCost'])+Number(incidentalList['testCost'])+Number(incidentalList['distributionCost'])+Number(incidentalList['highCost'])+Number(incidentalList['otherCost']))\n\n\t\t// let Tax = '';\n\t\t// Tax = incidentalList[\"materialCostTax\"];\n\t\t// Tax = (?'-')\n\n\t\treturn (\n\t\t\t<div className=\"todo-card zoomIn specail-zhailei\">\n\t\t\t\t<div className=\"todo-card-index\">{ this.props.index || 0}/{ this.props.allIndex || 0}</div>\n        <div className=\"todo-card-c\">\n          <div className=\"todo-info\">\n            <div className=\"todo-info-i border-line-h after specail\">\n              <div className=\"todo-info-l\">\n                <span className=\"todo-info-label ellipsis\">工程名称</span>\n                <span className=\"todo-info-val ellipsis\">{data[\"name\"]}</span>\n              </div>\n            </div>\n            <div className=\"todo-info-i border-line-h after\">\n              <div className=\"todo-info-l\">\n                <span className=\"todo-info-label ellipsis\">FA Code</span>\n                <span className=\"todo-info-val ellipsis\">{ data.faCategory }</span>\n              </div>\n              <div className=\"todo-info-l\">\n                <span className=\"todo-info-label ellipsis\">FA Code2</span>\n                <span className=\"todo-info-val ellipsis\">{ data.subCategory }</span>\n              </div>\n            </div>\n            <div className=\"todo-info-i border-line-h after\">\n              <div className=\"todo-info-l\">\n                <span className=\"todo-info-label ellipsis\">操作建议</span>\n                <span className=\"todo-info-val ellipsis\">{label}</span>\n              </div>\n            </div>\n            <div className=\"todo-info-i todo-info-money\">\n            \t<div className=\"todo-info-money-i\">\n            \t\t<div className=\"todo-info-money-i-l\">\n            \t\t\t<div className=\"todo-info-money-i-l-label ellipsis\">材料费</div>\n            \t\t\t<div className=\"todo-info-money-i-l-value ellipsis\" onClick={(e)=>self.NameInfo(1)}>{Number(incidentalList[\"materialCost\"]).formatMoney(2,'','')} ({incidentalList[\"materialCostTax\"] || '-'})</div>\n            \t\t</div>\n            \t\t<div className=\"todo-info-money-i-r\">\n            \t\t\t<div className=\"todo-info-money-i-l-label ellipsis\">人工费</div>\n            \t\t\t<div className=\"todo-info-money-i-l-value ellipsis\" onClick={(e)=>self.NameInfo(2)}>{Number(incidentalList[\"installationFee\"]).formatMoney(2,'','')} ({incidentalList[\"installationFeeRate\"] || '-'})</div>\n            \t\t</div>\n            \t</div>\n            \t<div className=\"todo-info-money-i\">\n            \t\t<div className=\"todo-info-money-i-l\">\n            \t\t\t<div className=\"todo-info-money-i-l-label ellipsis\">交通费</div>\n            \t\t\t<div className=\"todo-info-money-i-l-value ellipsis\" onClick={()=>self.NameInfo(3)}>{Number(incidentalList[\"carCost\"]).formatMoney(2,'','')} ({incidentalList[\"carCostTax\"] || '-'})</div>\n            \t\t</div>\n            \t\t<div className=\"todo-info-money-i-r\">\n            \t\t\t<div className=\"todo-info-money-i-l-label ellipsis\">住宿费</div>\n            \t\t\t<div className=\"todo-info-money-i-l-value ellipsis\" onClick={()=>self.NameInfo(4)}>{Number(incidentalList[\"hotelCost\"]).formatMoney(2,'','')} ({incidentalList[\"hotelCostTax\"] || '-'})</div>\n            \t\t</div>\n            \t</div>\n            \t<div className=\"todo-info-money-i\">\n            \t\t<div className=\"todo-info-money-i-l\">\n            \t\t\t<div className=\"todo-info-money-i-l-label ellipsis\">检测费</div>\n            \t\t\t<div className=\"todo-info-money-i-l-value ellipsis\" onClick={()=>self.NameInfo(5)}>{Number(incidentalList[\"testCost\"]).formatMoney(2,'','')} ({incidentalList[\"testCostTax\"] || '-'})</div>\n            \t\t</div>\n            \t\t<div className=\"todo-info-money-i-r\">\n            \t\t\t<div className=\"todo-info-money-i-l-label ellipsis\">运输费</div>\n            \t\t\t<div className=\"todo-info-money-i-l-value ellipsis\" onClick={()=>self.NameInfo(6)}>{Number(incidentalList[\"distributionCost\"]).formatMoney(2,'','')} ({incidentalList[\"distributionCostRate\"] || '-'})</div>\n            \t\t</div>\n            \t</div>\n            \t<div className=\"todo-info-money-i\">\n            \t\t<div className=\"todo-info-money-i-l\">\n            \t\t\t<div className=\"todo-info-money-i-l-label ellipsis\">登高费</div>\n            \t\t\t<div className=\"todo-info-money-i-l-value ellipsis\" onClick={()=>self.NameInfo(7)}>{Number(incidentalList[\"highCost\"]).formatMoney(2,'','')} ({incidentalList[\"highCostTax\"] || '-'})</div>\n            \t\t</div>\n            \t\t<div className=\"todo-info-money-i-r\">\n            \t\t\t<div className=\"todo-info-money-i-l-label ellipsis\">其他费用</div>\n            \t\t\t<div className=\"todo-info-money-i-l-value ellipsis\" onClick={()=>self.NameInfo(8)}>{Number(incidentalList[\"otherCost\"]).formatMoney(2,'','')} ({incidentalList[\"otherCostTax\"] || '-'})</div>\n            \t\t</div>\n            \t</div>\n            \t<div className=\"todo-info-money-i specail\">\n            \t\t<div className=\"todo-info-money-i-l\">\n            \t\t\t<div className=\"todo-info-money-i-l-label\">其他费用备注</div>\n            \t\t\t<div className=\"todo-info-money-i-l-value ellipsis\" onClick={()=>self.NameInfo(9)}>{incidentalList[\"otherCostRemark\"]}</div>\n            \t\t</div>\n            \t</div>\n            \t<div className=\"todo-info-money-i\">\n            \t\t<div className=\"todo-info-money-i-l\">\n            \t\t\t<div className=\"todo-info-money-i-l-label ellipsis\">总价</div>\n            \t\t\t<div className=\"todo-info-money-i-l-value ellipsis\">{Number(allMoney).formatMoney(2,'','')}</div>\n            \t\t</div>\n            \t</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\t\t)\n\t}\n\t_init_name(){\n\t\tlet data = this.props.itemdata;\n\t\tif(data[\"totalMaintenanceCost\"]){\n\t\t\treturn <div className=\"eps-item-info-inline\">\n\t\t\t\t<div className=\"eps-item-info\"><dt><label>工程名称</label></dt><dd><font className=\"ellipsis\">{ data.name }</font></dd></div>\n\t\t\t\t<div className=\"eps-item-info\"><dt><label>总价</label></dt><dd><font className=\"ellipsis\">{Number(data[\"totalMaintenanceCost\"]).formatMoney(2,'','')}</font></dd></div>\n\t\t\t</div>\n\t\t}else{\n\t\t\treturn <div className=\"eps-item-info\"><dt><label>工程名称</label></dt><dd><font className=\"ellipsis\">{ data.name }</font></dd></div>\n\t\t}\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/components/Common/ProjectCard.js","/**\n * 工程类头部用户信息\n * demo\n * <header className=\"header header-4lines\" ref=\"header\">\n\t\t\t\t\t<div className=\"header-bg\"></div>\n\t\t\t\t\t<div className=\"header-bg-2\"></div>\n\t\t\t\t\t<div className=\"header-c\">\n\t\t\t\t\t\t<UserCardToProject userinfo={ userinfo }/>\n\t\t\t\t\t</div>\n\t\t\t\t</header>\n */\n\nimport React,{ Component } from 'react';\nimport { connect } from 'dva';\nclass UserCardToProject extends Component{\n\topenWebView(data){\n\t\tvar url = EpsWebRoot+'/#'+data;\n\t\tlet datas = this.props.data;\n\t\twindow.upTabsData('remark','cache',datas);\n\t\tjw.pushWebView(url);\n\t}\n\topenFileView(data){\n\t\tvar url = EpsWebRoot+'/#'+data;\n\t\tlet datas = this.props.data;\n\t\twindow.upTabsData('file','cache',datas);\n\t\tjw.pushWebView(url);\n\t}\n\topenScrapView(){\n\t\tlet datas = this.props.data;\n\t\tvar url = EpsWebRoot+'/#/scrapped/'+datas[\"orderNumber\"];\n\t\twindow.upTabsData('scrap','cache',datas);\n\t\tjw.pushWebView(url);\t\n\t}\n\tinitRepairType(){\n\t\tlet data = this.props.data || {name:'',time:'','storeName':'',remark:'',repairType:''};\n\t\tif(data['repairType']){\n\t\t\treturn (data['repairType']=='0'?'预约':'紧急')\n\t\t}else{\n\t\t\treturn ''\n\t\t}\n\t}\n\trender(){\n\t\tlet data = this.props.data || {name:'',time:'','storeName':'',remark:'',repairType:''};\n\t\tlet orderid = window.location.href.split('?updateDate')[0].split('/');\n\t\torderid = orderid[orderid.length-1];\n\t\tlet fileUrl = '/file/'+orderid;\n\t\tif(window.isUnfinishedOrHistory()){\n\t\t\tfileUrl = '/filehistory/'+orderid\n\t\t}\n\t\treturn (<div className=\"user-card\">\n\t\t\t<div className=\"user-card-c\">\n\t\t\t\t<div className=\"user-card-avatar\">\n\t\t\t\t\t<img src={data[\"avatar\"]?data['avatar'][\"avatar_s\"]:'https://www.joywok.com/public/images/avatar/l.jpg'} alt=\"\"/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"user-card-info\">\n\t\t\t\t\t<div className=\"user-card-info-i\">\n\t\t\t\t\t\t<span className=\"user-card-label\">创建人</span>\n\t\t\t\t\t\t<span className=\"user-card-val\">{data['name'] || '-'}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"user-card-info-i\">\n\t\t\t\t\t\t<span className=\"user-card-label\">报修类型</span>\n\t\t\t\t\t\t<span className=\"user-card-val\">{this.initRepairType()}</span>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdata['repairType']=='0'?<span className=\"user-card-time\">{data['time']?moment(data['time']).format('YYYY-MM-DD HH:mm'):'-'}</span>:''\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"user-card-info-i\">\n\t\t\t\t\t\t<span className=\"user-card-label\">报修餐厅</span>\n\t\t\t\t\t\t<span className=\"user-card-val\">{data[\"storeName\"]||'-'}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"user-card-info-btns\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdata['remark'] && data['remark'].length!=0?<div className=\"user-card-info-btn\" onClick={(e)=>this.openWebView('/remarksdetail')}>\n\t\t\t\t\t\t\t\t<div className=\"user-card-info-btn-bg\"></div>\n\t\t\t\t\t\t\t\t<div className=\"user-card-info-btn-val\">查看备注</div>\n\t\t\t\t\t\t\t</div>:''\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<div className=\"user-card-info-btn\" onClick={(e)=>this.openFileView(fileUrl)}>\n\t\t\t\t\t\t\t<div className=\"user-card-info-btn-bg\"></div>\n\t\t\t\t\t\t\t<div className=\"user-card-info-btn-val preview-file\">查看附件{ data['fileCount'] && data['fileCount']!=0?('('+data['fileCount']+')'):''}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdata['showScrapTip']?<div className=\"user-card-info-btn\" onClick={(e)=>this.openScrapView(e)}>\n\t\t\t\t\t\t\t\t<div className=\"user-card-info-btn-bg\"></div>\n\t\t\t\t\t\t\t\t<div className=\"user-card-info-btn-val preview-file\">资产报废{ data['scrapPageInfo']  && data['scrapPageInfo'][\"total\"]!=0?('('+data['scrapPageInfo'][\"total\"]+')'):''}</div>\n\t\t\t\t\t\t\t</div>:''\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>)\n\t}\n};\n\nexport default connect((state)=>{return state})(UserCardToProject);\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/components/Common/UserCardToProject.js","/**\n * 工程明细\n */\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'dva';\n\n\nimport LoadMore from './../../components/Common/LoadMore';\n\nimport UserCard from './../../components/Common/UserCardToProject';\nimport { ProjectCardInfo } from './../../components/Common/ProjectCard';\n\nclass ProjectInfo extends Component {\n\tconstructor(props) {\n\t\tlet store = new Store('Joywok:cache:tabs:log');\n\t\tvar cache = store.find({id:'tab:cache'}) || {};\n\t\tif(cache['id']){\n\t\t\tprops['projectinfo']['parentData'] = cache[\"data\"];\n\t\t}\n\t\tsuper(props);\n\t}\n\trender(){\n\t\tlet view = this._init_view();\n\t\treturn (\n\t\t\t<div className=\"root-container\">\n\t\t\t\t{view}\n\t\t\t</div>\n\t\t);\n\t}\n\t_init_view(){\n\t\tlet view = '';\n\t\tlet data = this.props.projectinfo;\n\t\tview = <div className=\"root-container-w\">\n\t\t\t<header className=\"header\" ref=\"header\">\n\t\t\t\t<div className=\"header-bg-specail\">\n\t\t\t\t\t<div className=\"header-bg\"></div>\n\t\t\t\t\t<div className=\"header-bg-2\"></div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"header-c\">\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t\t<sesstion className=\"main\">\n\t\t\t\t<div className=\"main-c\" style={{\n\t\t\t\t\tpaddingBottom:'20px'\n\t\t\t\t}}>\n\t\t\t\t\t{\n\t\t\t\t\t\t_.map(data['list'],function(i,index){\n\t\t\t\t\t\t\tlet incidentalList = _.findWhere(data['incidentalList'],{deviceNumber:i['deviceNumber']});\n\t\t\t\t\t\t\treturn <ProjectCardInfo itemdata={_.extend(i,{\n\t\t\t\t\t\t\t\tname:i[\"deviceName\"]\n\t\t\t\t\t\t\t})} incidentalList={incidentalList} showAllData={false} index={index+1} allIndex={data['incidentalList'].length}></ProjectCardInfo>\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\t<LoadMore container='main-c' data={data['loading']} onEndReached={(e)=>{this.onEndReached(e)} }/>\n\t\t\t\t</div>\n\t\t\t</sesstion>\n\t\t</div>\n\t\treturn view\n\t}\n\topenWebView(data){\n\t\tvar url = EpsWebRoot+'/#'+data\n\t\tjw.pushWebView(url);\n\t}\n\tcomponentDidMount(){\n\t\tlet self = this;\n\t\tlet dispatch = this.props.dispatch;\n\t\tlet modelData = this.props.projectinfo;\n\t\tlet orderid = this.props.params.orderid.split(\"&\")[0];\n\t\tthis.setHeight();\n\t\tdispatch({ type: 'projectinfo/fetch', payload:orderid});\n\t}\n\tcomponentDidUpdate(){\n\t\tlet self = this;\n\t\tthis.setHeight()\n\t}\n\tsetHeight(){\n\t\tlet self = this;\n\t\tsetTimeout(function(){\n\t\t\tlet clientHeight = document.documentElement.clientHeight || document.body.clientHeight;\n\t\t\tlet header = $('.header').height() ||0;\n\t\t\t$('.main-c').css({height:clientHeight-header+'px'});\n\t\t},0)\n\t}\n}\n\nfunction mapStateToProps(state) {\n\treturn state\n}\nexport default connect(mapStateToProps)(ProjectInfo);\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/chunk/Repair/ProjectInfo.js","import request from './../../utils/EpsRequest';\nfunction FirstFetch(parame) {\n  return request('/McdEpsApi/joywok/repair/getStoreEvaluate', {\n    method: 'POST',\n    body:JSON.stringify({\n    \tparam:{\n    \t\teid:window.eid,\n    \t\tcondition: {\n\t\t      orderNumber: parame\n\t\t    },\n\t\t    pager:{'pageNum':'1','pageSize':'1000'}\n\t    }\n    })\n  });\n}\nexport default {\n\tnamespace: 'projectinfo',\n\tstate: {\n\t\tloading:{\n\t\t\tloading:true,\n\t\t\tfix:true,\n\t\t\thide:false\n\t\t},\n\t},\n\treducers: {\n\t\tchangeData(state,action) {\n\t\t\treturn { ...state, ...action.payload };\n\t\t}\n\t},\n\teffects: {\n\t\t*fetch({ payload }, { call, put ,select}) {\n      let datas = yield select();\n      // let firstData = yield call(FirstFetch,payload);\n      let secondData = yield call(FirstFetch,payload);\n      // console.log(secondData,'这个里面有什么数据ne');\n      let loading = datas[\"projectinfo\"]['loading'];\n  \t\tloading['loading'] = false;\n  \t\tloading['hide'] = true;\n  \t\tloading['fix'] = false;\n      // let allData = _.extend({\n      // \tloading:loading\n      // },firstData['data']['body'],secondData['data']['body'],{\n      // \tlist:firstData['data']['body'][\"pageInfo\"]['detailList']\n      // })\n      let allData = _.extend({\n      \tloading:loading\n      },secondData['data']['body'],{\n      \tlist:secondData['data']['body'][\"detailList\"].length!=0?secondData['data']['body'][\"detailList\"]:secondData['data']['body'][\"orderList\"][\"list\"]\n      })\n      NProgress.done();\n      yield put({\n        type: 'changeData',\n        payload: allData,\n      });\n    }\n\t},\n\tsubscriptions: {\n\t}\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/models/Repair/ProjectInfo.js"],"sourceRoot":""}